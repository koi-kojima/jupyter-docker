FROM nvidia/cuda:11.1-cudnn8-runtime-ubuntu20.04

ENV DEBIAN_FRONTEND=noninteractive
ARG CUDA_MAJOR_VERSION=${CUDA_MAJOR_VERSION:-11}
ARG CUDA_MINOR_VERSION=${CUDA_MINOR_VERSION:-1}

RUN adduser -q --gecos "" --disabled-password dev
ENV PATH /home/dev/conda/bin:$PATH

RUN sed -i -e 's%http://[^ ]\+%mirror://mirrors.ubuntu.com/mirrors.txt%g' /etc/apt/sources.list && \
    apt-get update --fix-missing -qq && apt-get install -y \
    curl \
    gmp-ecm \
    ffmpeg \
    file \
    git \
    less \
    locales \
    mesa-utils \
    neofetch \
    nkf \
    opencv-data \
    pkg-config \
    python3-opengl \
    python3-vtk7 \
    python3.9-dev \
    qt5-default \
    ssh \
    sudo \
    swig \
    tree \
    unzip \
    v4l-utils \
    vim \
    wget \
    x264 \
    xvfb \
    zip \
    zlib1g-dev \
    zsh \
    --no-install-recommends \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
EXPOSE 22

# SSH setting
RUN sed -i -e "s/#PermitRootLogin prohibit-password/PermitRootLogin yes/" \
           -e "s/#PermitEmptyPasswords no/PermitEmptyPasswords yes/" \
           /etc/ssh/sshd_config && \
    sed -i -e "s/root:x:/root::/g" -e "s/dev:x:/dev::/g" /etc/passwd && \
    mkdir /run/sshd

# Install Miniconda
RUN curl -L -sS -o /home/dev/miniconda.sh "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh" \
    && sudo -u dev --login /bin/bash /home/dev/miniconda.sh -b -p /home/dev/conda \
    && rm /home/dev/miniconda.sh \
    && ln -s /home/dev/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \
    && sudo -u dev --login /home/dev/conda/bin/conda update conda --quiet --yes >/dev/null \
    && sudo -u dev --login /home/dev/conda/bin/conda create --yes -n research -c conda-forge python=3.9 mamba \
    && sudo -u dev --login /home/dev/conda/bin/conda clean --yes --index-cache >/dev/null \
    && echo ". /home/dev/conda/etc/profile.d/conda.sh" >> ~/.bashrc \
    && echo "conda activate research" >> ~/.bashrc \
    && ln -s /home/dev/conda/envs/research/bin/python /usr/bin/python
SHELL ["/bin/bash", "-l", "-c"]

USER dev
WORKDIR /home/dev
ENV HOME /home/dev
ENV PATH $HOME/.local/bin:$PATH
ENV PATH $PATH:/home/dev/conda/envs/research/bin
# Install Python library
RUN mamba install --yes -c pytorch -c nvidia -c conda-forge \
    pytorch \
    cudatoolkit=11.1 \
    torchvision \
    torchaudio \
    && mamba install --yes -c conda-forge \
    scipy \
    sympy \
    pandas \
    openpyxl \
    pytables \
    seaborn \
    scikit-learn \
    scikit-image \
    jedi jupyterlab jupyterlab-git ipywidgets \
    && conda config --add channels conda-forge \
    && conda activate research \
    && pip install opencv-python japanize-matplotlib \
    && conda clean -y --all &>/dev/null && chown -hR dev:dev /home/dev/conda/ \
    && echo ". /home/dev/conda/etc/profile.d/conda.sh" >> ~/.bashrc \
    && echo "conda activate research" >> ~/.bashrc

# Install Jupyter lab extensions
ENV NOTEBOOK_DIR /home/dev/notebooks
RUN jupyter lab --generate-config \
    && jupyter_lab_config=$(jupyter --config-dir)/jupyter_lab_config.py \
    && echo "c.ContentsManager.allow_hidden = True" >> ${jupyter_lab_config} \
    && echo "c.FileContentsManager.allow_hidden = True" >> ${jupyter_lab_config} \
    && echo "c.ServerApp.tornado_settings = {'shell_command': ['bash']}" >> ${jupyter_lab_config} \
    && sed -i \
    -e "s/# c.ServerApp.ip = 'localhost'/c.ServerApp.ip = '0.0.0.0'/" \
    -e "s/# c.ServerApp.allow_root = False/c.ServerApp.allow_root = True/" \
    -e "s/# c.ServerApp.allow_remote_access = False/c.ServerApp.allow_remote_access = True/" \
    -e "s:# c.ServerApp.root_dir = '':c.ServerApp.root_dir = '$NOTEBOOK_DIR':" \
    ${jupyter_lab_config} \
    && mkdir -p ~/.jupyter/lab/user-settings/@jupyterlab \
    && mkdir -p "$NOTEBOOK_DIR"
COPY ./jupyter_config/ /home/dev/.jupyter/lab/user-settings/@jupyterlab/
COPY ./run_jupyter.sh /home/dev/.local/bin/

USER root
EXPOSE 8888
CMD ["/usr/sbin/sshd", "-D"]

